{"ast":null,"code":"var _jsxFileName = \"/Users/benjamincritoph/Programming/React/chess/src/Board.js\";\nimport './Board.css';\nimport React from 'react';\nimport Square from './Square';\nimport { King, Knight, Queen, Rook } from './Pieces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet kn = new Knight();\nkn.yeet();\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: this.setupBoard(),\n      selectedPiece: [-1, -1]\n    };\n  }\n\n  arrayEquals(a, b) {\n    return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index) => val === b[index]);\n  }\n\n  selectPiece(pos) {\n    if (this.arrayEquals(pos, this.state.selectedPiece)) {\n      console.log(true);\n      this.setState({\n        selectedPiece: [-1, -1]\n      });\n    }\n\n    this.setState({\n      selectedPiece: pos\n    });\n  }\n\n  setupBoard() {\n    let board = [];\n    const {\n      nRows,\n      nCols\n    } = this.props; // Generate Empty Board\n\n    for (let r = nRows - 1; r >= 0; r--) {\n      let row = [];\n\n      for (let c = 0; c < nCols; c++) {\n        row.push(\"-\");\n      }\n\n      board.push(row);\n    } // Display Black Pieces\n\n\n    board[0][0] = new Rook();\n    board[0][1] = new Knight();\n    board[0][2] = new Bishop();\n    board[0][3] = new Queen();\n    board[0][4] = new King();\n    board[0][5] = new Bishop();\n    board[0][6] = new Knight();\n    board[0][7] = new Rook(); // Display White Pieces\n\n    board[7][0] = new Rook();\n    board[7][1] = new Knight();\n    board[7][2] = new Bishop();\n    board[7][3] = new Queen();\n    board[7][4] = new King();\n    board[7][5] = new Bishop();\n    board[7][6] = new Knight();\n    board[7][7] = new Rook(); // Display Pawns\n\n    for (let c = 0; c < 8; c++) {\n      board[1][c] = \"b_p\";\n      board[6][c] = \"w_p\";\n    }\n\n    return board;\n  }\n\n  render() {\n    console.log(\"Rerender\"); // Render Chess Board\n\n    let board = [];\n    let cOdd = true;\n    let rOdd = true;\n\n    for (let i = this.props.nRows - 1; i >= 0; i--) {\n      let row = [];\n      cOdd = rOdd;\n\n      for (let j = 0; j < this.props.nCols; j++) {\n        const sqr = `${String.fromCharCode(97 + j)}${i}`;\n        const isDark = cOdd ? true : false;\n        const piece = this.state.board[i][j];\n        const pos = [i, j];\n        const isSelected = pos.every((val, idx) => val === this.state.selectedPiece[idx]);\n        console.log(\"pos = \" + pos + \" state= \" + this.state.selectedPiece);\n        row.push( /*#__PURE__*/_jsxDEV(Square, {\n          isDark: isDark,\n          piece: piece,\n          selectPiece: () => this.selectPiece([i, j]),\n          isSelected: isSelected\n        }, sqr, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }, this));\n        cOdd = !cOdd;\n      }\n\n      board.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }, this));\n      rOdd = !rOdd; // Render Chess Pieces\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nBoard.defaultProps = {\n  nRows: 8,\n  nCols: 8\n};\nexport default Board;","map":{"version":3,"names":["React","Square","King","Knight","Queen","Rook","kn","yeet","Board","Component","constructor","props","state","board","setupBoard","selectedPiece","arrayEquals","a","b","Array","isArray","length","every","val","index","selectPiece","pos","console","log","setState","nRows","nCols","r","row","c","push","Bishop","render","cOdd","rOdd","i","j","sqr","String","fromCharCode","isDark","piece","isSelected","idx","defaultProps"],"sources":["/Users/benjamincritoph/Programming/React/chess/src/Board.js"],"sourcesContent":["import './Board.css'\nimport React from 'react'\nimport Square from './Square';\nimport {King, Knight, Queen, Rook} from './Pieces';\n\nlet kn = new Knight();\nkn.yeet();\n\nclass Board extends React.Component {\n  static defaultProps = {\n    nRows: 8,\n    nCols: 8,\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: this.setupBoard(),\n      selectedPiece: [-1, -1]\n    }\n  }\n  arrayEquals(a, b) {\n    return Array.isArray(a) &&\n        Array.isArray(b) &&\n        a.length === b.length &&\n        a.every((val, index) => val === b[index]);\n  }\n\n  selectPiece(pos) {\n    if(this.arrayEquals(pos, this.state.selectedPiece)){\n      console.log(true)\n      this.setState({selectedPiece: [-1, -1]})\n    }\n    this.setState({selectedPiece: pos})\n  }\n\n  setupBoard() {\n    let board = [];\n    const {nRows, nCols} = this.props;\n    // Generate Empty Board\n    for (let r = nRows - 1; r >= 0; r--) {\n      let row = []\n      for (let c = 0; c < nCols; c++) {\n        row.push(\"-\") \n      }\n      board.push(row)\n    }\n    // Display Black Pieces\n    board[0][0] = new Rook();\n    board[0][1] = new Knight();\n    board[0][2] = new Bishop();\n    board[0][3] = new Queen();\n    board[0][4] = new King();\n    board[0][5] = new Bishop();\n    board[0][6] = new Knight();\n    board[0][7] = new Rook();\n    // Display White Pieces\n    board[7][0] = new Rook();\n    board[7][1] = new Knight();\n    board[7][2] = new Bishop();\n    board[7][3] = new Queen();\n    board[7][4] = new King();\n    board[7][5] = new Bishop();\n    board[7][6] = new Knight();\n    board[7][7] = new Rook();\n    // Display Pawns\n    for(let c = 0; c < 8; c++){\n      board[1][c] = \"b_p\";\n      board[6][c] = \"w_p\";\n    }\n    return board;\n  }\n  render(){\n    console.log(\"Rerender\")\n    // Render Chess Board\n    let board = [];\n    let cOdd = true;\n    let rOdd = true;\n    for(let i = this.props.nRows - 1; i >= 0; i--){\n      let row = [] \n      cOdd = rOdd\n      for(let j = 0; j < this.props.nCols; j++){\n        const sqr = `${String.fromCharCode(97 + j)}${i}`\n        const isDark = cOdd? true: false;\n        const piece = this.state.board[i][j];\n        const pos = [i, j];\n        const isSelected = pos.every((val, idx) => val === this.state.selectedPiece[idx]);\n        console.log(\"pos = \"+pos+\" state= \"+this.state.selectedPiece)\n        row.push(<Square key={sqr} isDark={isDark} piece={piece} selectPiece={() => this.selectPiece([i,j])} isSelected={isSelected}/>)\n        cOdd = !cOdd;\n      }\n      board.push(<tr key={i}>{row}</tr>)   \n      rOdd = !rOdd;\n      \n      // Render Chess Pieces\n    }\n    return (\n      <div>\n        <table>\n          <tbody>\n            {board}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}