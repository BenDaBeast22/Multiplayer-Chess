{"ast":null,"code":"import { arrayEquals } from './Helpers';\nimport { King } from './Pieces';\nconst BLACK = false;\nconst WHITE = true;\n\nclass ChessGame {\n  constructor() {\n    this.turn = WHITE;\n  }\n\n  isLegalMove(legalMoves, endPos) {\n    // Check that move is legal\n    for (let move of legalMoves) {\n      if (arrayEquals(move, endPos)) {\n        return true;\n      }\n    }\n  }\n\n  isKingAttacked(kingPos, oppSqrsCovered) {}\n\n  move(board, startPos, endPos, piece, kingPos) {\n    // If legal move\n    const [a, b] = startPos;\n    const [x, y] = endPos;\n    const legalMoves = piece.allowedMoves(board, startPos, piece, kingPos);\n\n    if (this.isLegalMove(legalMoves, endPos)) {\n      if (piece instanceof King) {\n        this.kingPos[kIdx] = endPos;\n      }\n\n      board[a][b] = \"-\";\n      board[x][y] = piece;\n      return board;\n    }\n\n    return false;\n  }\n\n}\n\nexport default ChessGame;","map":{"version":3,"names":["arrayEquals","King","BLACK","WHITE","ChessGame","constructor","turn","isLegalMove","legalMoves","endPos","move","isKingAttacked","kingPos","oppSqrsCovered","board","startPos","piece","a","b","x","y","allowedMoves","kIdx"],"sources":["/Users/benjamincritoph/Programming/React/chess/src/ChessGame.js"],"sourcesContent":["import { arrayEquals } from './Helpers';\nimport { King } from './Pieces';\n\nconst BLACK = false;\nconst WHITE = true;\n\nclass ChessGame {\n  constructor(){\n    this.turn = WHITE;\n  }\n  isLegalMove(legalMoves, endPos){\n    // Check that move is legal\n    for(let move of legalMoves){\n      if(arrayEquals(move, endPos)){\n        return true;\n      }\n    }\n  }\n  isKingAttacked(kingPos, oppSqrsCovered) {\n\n  }\n  move(board, startPos, endPos, piece, kingPos) {\n    // If legal move\n    const [a, b] = startPos;\n    const [x, y] = endPos;\n    const legalMoves = piece.allowedMoves(board, startPos, piece, kingPos);\n    if(this.isLegalMove(legalMoves, endPos)){\n      if (piece instanceof King) {\n        this.kingPos[kIdx] = endPos;\n      }\n      board[a][b] = \"-\";\n      board[x][y] = piece;\n      return board;\n    }\n    return false;\n  }\n}\n\nexport default ChessGame;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,SAASC,IAAT,QAAqB,UAArB;AAEA,MAAMC,KAAK,GAAG,KAAd;AACA,MAAMC,KAAK,GAAG,IAAd;;AAEA,MAAMC,SAAN,CAAgB;EACdC,WAAW,GAAE;IACX,KAAKC,IAAL,GAAYH,KAAZ;EACD;;EACDI,WAAW,CAACC,UAAD,EAAaC,MAAb,EAAoB;IAC7B;IACA,KAAI,IAAIC,IAAR,IAAgBF,UAAhB,EAA2B;MACzB,IAAGR,WAAW,CAACU,IAAD,EAAOD,MAAP,CAAd,EAA6B;QAC3B,OAAO,IAAP;MACD;IACF;EACF;;EACDE,cAAc,CAACC,OAAD,EAAUC,cAAV,EAA0B,CAEvC;;EACDH,IAAI,CAACI,KAAD,EAAQC,QAAR,EAAkBN,MAAlB,EAA0BO,KAA1B,EAAiCJ,OAAjC,EAA0C;IAC5C;IACA,MAAM,CAACK,CAAD,EAAIC,CAAJ,IAASH,QAAf;IACA,MAAM,CAACI,CAAD,EAAIC,CAAJ,IAASX,MAAf;IACA,MAAMD,UAAU,GAAGQ,KAAK,CAACK,YAAN,CAAmBP,KAAnB,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CJ,OAA3C,CAAnB;;IACA,IAAG,KAAKL,WAAL,CAAiBC,UAAjB,EAA6BC,MAA7B,CAAH,EAAwC;MACtC,IAAIO,KAAK,YAAYf,IAArB,EAA2B;QACzB,KAAKW,OAAL,CAAaU,IAAb,IAAqBb,MAArB;MACD;;MACDK,KAAK,CAACG,CAAD,CAAL,CAASC,CAAT,IAAc,GAAd;MACAJ,KAAK,CAACK,CAAD,CAAL,CAASC,CAAT,IAAcJ,KAAd;MACA,OAAOF,KAAP;IACD;;IACD,OAAO,KAAP;EACD;;AA7Ba;;AAgChB,eAAeV,SAAf"},"metadata":{},"sourceType":"module"}