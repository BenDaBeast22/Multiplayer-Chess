{"ast":null,"code":"import { arrayEquals } from './Helpers';\nimport { King, Piece } from './Pieces';\nconst BLACK = false;\nconst WHITE = true;\n\nclass ChessGame {\n  constructor() {\n    this.turn = WHITE;\n    this.kingPos = [[0, 4], [7, 4]];\n  }\n\n  isLegalMove(legalMoves, endPos) {\n    // Check that move is legal\n    for (let move of legalMoves) {\n      if (arrayEquals(move, endPos)) {\n        return true;\n      }\n    }\n  }\n\n  isKingAttacked(kingPos, oppSqrsCovered) {}\n\n  move(board, startPos, endPos, piece) {\n    // If legal move\n    const [a, b] = startPos;\n    const [x, y] = endPos;\n    const legalMoves = piece.legalMoves(board, startPos, piece);\n\n    if (this.isLegalMove(legalMoves, endPos)) {\n      let newBoard = [...board];\n      newBoard[a][b] = \"-\";\n      newBoard[x][y] = piece; // Check move doesn't allow king to be attacked\n\n      const kIdx = piece.type ? 0 : 1;\n      const sqrsCovered = this.opposingSquaresCovered(newBoard, piece.type);\n\n      for (let move of sqrsCovered) {\n        if (arrayEquals(move, this.kingPos[kIdx])) {\n          console.log(\"iahsdfklhasdlkjfhlaksdjhflkasdhf\");\n          return false;\n        }\n      }\n\n      if (piece instanceof King) {\n        this.kingPos[kIdx] = endPos;\n      }\n\n      board[a][b] = \"-\";\n      board[x][y] = piece;\n      return board;\n    }\n\n    return false;\n  }\n\n}\n\nexport default ChessGame;","map":{"version":3,"names":["arrayEquals","King","Piece","BLACK","WHITE","ChessGame","constructor","turn","kingPos","isLegalMove","legalMoves","endPos","move","isKingAttacked","oppSqrsCovered","board","startPos","piece","a","b","x","y","newBoard","kIdx","type","sqrsCovered","opposingSquaresCovered","console","log"],"sources":["/Users/benjamincritoph/Programming/React/chess/src/ChessGame.js"],"sourcesContent":["import { arrayEquals } from './Helpers';\nimport { King, Piece } from './Pieces';\n\nconst BLACK = false;\nconst WHITE = true;\n\nclass ChessGame {\n  constructor(){\n    this.turn = WHITE;\n    this.kingPos = [[0, 4], [7, 4]];\n  }\n  isLegalMove(legalMoves, endPos){\n    // Check that move is legal\n    for(let move of legalMoves){\n      if(arrayEquals(move, endPos)){\n        return true;\n      }\n    }\n  }\n  isKingAttacked(kingPos, oppSqrsCovered) {\n\n  }\n  move(board, startPos, endPos, piece) {\n    // If legal move\n    const [a, b] = startPos;\n    const [x, y] = endPos;\n    const legalMoves = piece.legalMoves(board, startPos, piece);\n    if(this.isLegalMove(legalMoves, endPos)){\n      let newBoard = [...board];\n      newBoard[a][b] = \"-\";\n      newBoard[x][y] = piece;\n      // Check move doesn't allow king to be attacked\n      const kIdx = piece.type? 0 : 1;\n      const sqrsCovered = this.opposingSquaresCovered(newBoard, piece.type);\n      for (let move of sqrsCovered) {\n        if (arrayEquals(move, this.kingPos[kIdx])) {\n          console.log(\"iahsdfklhasdlkjfhlaksdjhflkasdhf\")\n          return false;\n        }\n      }\n      if (piece instanceof King) {\n        this.kingPos[kIdx] = endPos;\n      }\n      board[a][b] = \"-\";\n      board[x][y] = piece;\n      return board;\n    }\n    return false;\n  }\n}\n\nexport default ChessGame;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,UAA5B;AAEA,MAAMC,KAAK,GAAG,KAAd;AACA,MAAMC,KAAK,GAAG,IAAd;;AAEA,MAAMC,SAAN,CAAgB;EACdC,WAAW,GAAE;IACX,KAAKC,IAAL,GAAYH,KAAZ;IACA,KAAKI,OAAL,GAAe,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,CAAf;EACD;;EACDC,WAAW,CAACC,UAAD,EAAaC,MAAb,EAAoB;IAC7B;IACA,KAAI,IAAIC,IAAR,IAAgBF,UAAhB,EAA2B;MACzB,IAAGV,WAAW,CAACY,IAAD,EAAOD,MAAP,CAAd,EAA6B;QAC3B,OAAO,IAAP;MACD;IACF;EACF;;EACDE,cAAc,CAACL,OAAD,EAAUM,cAAV,EAA0B,CAEvC;;EACDF,IAAI,CAACG,KAAD,EAAQC,QAAR,EAAkBL,MAAlB,EAA0BM,KAA1B,EAAiC;IACnC;IACA,MAAM,CAACC,CAAD,EAAIC,CAAJ,IAASH,QAAf;IACA,MAAM,CAACI,CAAD,EAAIC,CAAJ,IAASV,MAAf;IACA,MAAMD,UAAU,GAAGO,KAAK,CAACP,UAAN,CAAiBK,KAAjB,EAAwBC,QAAxB,EAAkCC,KAAlC,CAAnB;;IACA,IAAG,KAAKR,WAAL,CAAiBC,UAAjB,EAA6BC,MAA7B,CAAH,EAAwC;MACtC,IAAIW,QAAQ,GAAG,CAAC,GAAGP,KAAJ,CAAf;MACAO,QAAQ,CAACJ,CAAD,CAAR,CAAYC,CAAZ,IAAiB,GAAjB;MACAG,QAAQ,CAACF,CAAD,CAAR,CAAYC,CAAZ,IAAiBJ,KAAjB,CAHsC,CAItC;;MACA,MAAMM,IAAI,GAAGN,KAAK,CAACO,IAAN,GAAY,CAAZ,GAAgB,CAA7B;MACA,MAAMC,WAAW,GAAG,KAAKC,sBAAL,CAA4BJ,QAA5B,EAAsCL,KAAK,CAACO,IAA5C,CAApB;;MACA,KAAK,IAAIZ,IAAT,IAAiBa,WAAjB,EAA8B;QAC5B,IAAIzB,WAAW,CAACY,IAAD,EAAO,KAAKJ,OAAL,CAAae,IAAb,CAAP,CAAf,EAA2C;UACzCI,OAAO,CAACC,GAAR,CAAY,kCAAZ;UACA,OAAO,KAAP;QACD;MACF;;MACD,IAAIX,KAAK,YAAYhB,IAArB,EAA2B;QACzB,KAAKO,OAAL,CAAae,IAAb,IAAqBZ,MAArB;MACD;;MACDI,KAAK,CAACG,CAAD,CAAL,CAASC,CAAT,IAAc,GAAd;MACAJ,KAAK,CAACK,CAAD,CAAL,CAASC,CAAT,IAAcJ,KAAd;MACA,OAAOF,KAAP;IACD;;IACD,OAAO,KAAP;EACD;;AA1Ca;;AA6ChB,eAAeV,SAAf"},"metadata":{},"sourceType":"module"}