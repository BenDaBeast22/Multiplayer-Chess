{"ast":null,"code":"var _jsxFileName = \"/Users/benjamincritoph/Programming/React/chess/src/Board.js\";\nimport './Board.css';\nimport React from 'react';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: this.setupBoard()\n    };\n  }\n\n  setupBoard() {\n    let board = [];\n    const {\n      nRows,\n      nCols\n    } = this.props; // Generate Empty Board\n\n    for (let r = nRows; r > 0; r--) {\n      let row = [];\n\n      for (let c = 0; c < nCols; c++) {\n        row.push(\"-\");\n      }\n\n      board.push(row);\n    } // Display Black Pieces\n\n\n    board[0][0] = \"b_r\";\n    board[0][1] = \"b_kn\";\n    board[0][2] = \"b_b\";\n    board[0][3] = \"b_q\";\n    board[0][4] = \"b_k\";\n    board[0][5] = \"b_b\";\n    board[0][6] = \"b_kn\";\n    board[0][7] = \"b_r\"; // Display White Pieces\n\n    board[7][0] = \"w_r\";\n    board[7][1] = \"w_kn\";\n    board[7][2] = \"w_b\";\n    board[7][3] = \"w_q\";\n    board[7][4] = \"w_k\";\n    board[7][5] = \"w_b\";\n    board[7][6] = \"w_kn\";\n    board[7][7] = \"w_r\"; // Display Pawns\n\n    for (let c = 0; c < 8; c++) {\n      board[1][c] = \"b_p\";\n      board[6][c] = \"w_p\";\n    }\n\n    return board;\n  }\n\n  render() {\n    // Render Chess Board\n    let board = [];\n    let cOdd = true;\n    let rOdd = true;\n\n    for (let i = this.props.nRows - 1; i >= 0; i--) {\n      let row = [];\n      cOdd = rOdd;\n\n      for (let j = 0; j < this.props.nCols; j++) {\n        const sqr = `${String.fromCharCode(97 + j)}${i}`;\n        const isDark = cOdd ? true : false;\n        console.log(this.state.board);\n        row.push( /*#__PURE__*/_jsxDEV(Square, {\n          isDark: isDark\n        }, sqr, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 18\n        }, this));\n        cOdd = !cOdd;\n      }\n\n      board.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }, this));\n      rOdd = !rOdd; // Render Chess Pieces\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nBoard.defaultProps = {\n  nRows: 8,\n  nCols: 8\n};\nexport default Board;","map":{"version":3,"names":["React","Square","Board","Component","constructor","props","state","board","setupBoard","nRows","nCols","r","row","c","push","render","cOdd","rOdd","i","j","sqr","String","fromCharCode","isDark","console","log","defaultProps"],"sources":["/Users/benjamincritoph/Programming/React/chess/src/Board.js"],"sourcesContent":["import './Board.css'\nimport React from 'react'\nimport Square from './Square';\n\nclass Board extends React.Component {\n  static defaultProps = {\n    nRows: 8,\n    nCols: 8,\n  }\n  constructor(props){\n    super(props);\n    this.state = {\n      board: this.setupBoard()\n    }\n  }\n\n  setupBoard(){\n    let board = [];\n    const {nRows, nCols} = this.props;\n    // Generate Empty Board\n    for (let r = nRows; r > 0; r--) {\n      let row = []\n      for (let c = 0; c < nCols; c++) {\n        row.push(\"-\") \n      }\n      board.push(row)\n    }\n    // Display Black Pieces\n    board[0][0] = \"b_r\";\n    board[0][1] = \"b_kn\";\n    board[0][2] = \"b_b\";\n    board[0][3] = \"b_q\";\n    board[0][4] = \"b_k\";\n    board[0][5] = \"b_b\";\n    board[0][6] = \"b_kn\";\n    board[0][7] = \"b_r\";\n    // Display White Pieces\n    board[7][0] = \"w_r\";\n    board[7][1] = \"w_kn\";\n    board[7][2] = \"w_b\";\n    board[7][3] = \"w_q\";\n    board[7][4] = \"w_k\";\n    board[7][5] = \"w_b\";\n    board[7][6] = \"w_kn\";\n    board[7][7] = \"w_r\";\n    // Display Pawns\n    for(let c = 0; c < 8; c++){\n      board[1][c] = \"b_p\";\n      board[6][c] = \"w_p\";\n    }\n    return board;\n  }\n  render(){\n    // Render Chess Board\n    let board = [];\n    let cOdd = true;\n    let rOdd = true;\n    for(let i = this.props.nRows - 1; i >= 0; i--){\n      let row = [] \n      cOdd = rOdd\n      for(let j = 0; j < this.props.nCols; j++){\n        const sqr = `${String.fromCharCode(97 + j)}${i}`\n        const isDark = cOdd? true: false;\n        console.log(this.state.board);\n        row.push(<Square key={sqr} isDark={isDark}  />)\n        cOdd = !cOdd;\n      }\n      board.push(<tr key={i}>{row}</tr>)   \n      rOdd = !rOdd;\n      \n      // Render Chess Pieces\n    }\n    return (\n      <div>\n        <table>\n          <tbody>\n            {board}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Board;"],"mappings":";AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;EAKlCC,WAAW,CAACC,KAAD,EAAO;IAChB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,KAAK,EAAE,KAAKC,UAAL;IADI,CAAb;EAGD;;EAEDA,UAAU,GAAE;IACV,IAAID,KAAK,GAAG,EAAZ;IACA,MAAM;MAACE,KAAD;MAAQC;IAAR,IAAiB,KAAKL,KAA5B,CAFU,CAGV;;IACA,KAAK,IAAIM,CAAC,GAAGF,KAAb,EAAoBE,CAAC,GAAG,CAAxB,EAA2BA,CAAC,EAA5B,EAAgC;MAC9B,IAAIC,GAAG,GAAG,EAAV;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;QAC9BD,GAAG,CAACE,IAAJ,CAAS,GAAT;MACD;;MACDP,KAAK,CAACO,IAAN,CAAWF,GAAX;IACD,CAVS,CAWV;;;IACAL,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,MAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,MAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd,CAnBU,CAoBV;;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,MAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,MAAd;IACAA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAc,KAAd,CA5BU,CA6BV;;IACA,KAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;MACxBN,KAAK,CAAC,CAAD,CAAL,CAASM,CAAT,IAAc,KAAd;MACAN,KAAK,CAAC,CAAD,CAAL,CAASM,CAAT,IAAc,KAAd;IACD;;IACD,OAAON,KAAP;EACD;;EACDQ,MAAM,GAAE;IACN;IACA,IAAIR,KAAK,GAAG,EAAZ;IACA,IAAIS,IAAI,GAAG,IAAX;IACA,IAAIC,IAAI,GAAG,IAAX;;IACA,KAAI,IAAIC,CAAC,GAAG,KAAKb,KAAL,CAAWI,KAAX,GAAmB,CAA/B,EAAkCS,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA8C;MAC5C,IAAIN,GAAG,GAAG,EAAV;MACAI,IAAI,GAAGC,IAAP;;MACA,KAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKd,KAAL,CAAWK,KAA9B,EAAqCS,CAAC,EAAtC,EAAyC;QACvC,MAAMC,GAAG,GAAI,GAAEC,MAAM,CAACC,YAAP,CAAoB,KAAKH,CAAzB,CAA4B,GAAED,CAAE,EAA/C;QACA,MAAMK,MAAM,GAAGP,IAAI,GAAE,IAAF,GAAQ,KAA3B;QACAQ,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,KAAvB;QACAK,GAAG,CAACE,IAAJ,eAAS,QAAC,MAAD;UAAkB,MAAM,EAAES;QAA1B,GAAaH,GAAb;UAAA;UAAA;UAAA;QAAA,QAAT;QACAJ,IAAI,GAAG,CAACA,IAAR;MACD;;MACDT,KAAK,CAACO,IAAN,eAAW;QAAA,UAAaF;MAAb,GAASM,CAAT;QAAA;QAAA;QAAA;MAAA,QAAX;MACAD,IAAI,GAAG,CAACA,IAAR,CAX4C,CAa5C;IACD;;IACD,oBACE;MAAA,uBACE;QAAA,uBACE;UAAA,UACGV;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AA7EiC;;AAA9BL,K,CACGwB,Y,GAAe;EACpBjB,KAAK,EAAE,CADa;EAEpBC,KAAK,EAAE;AAFa,C;AA+ExB,eAAeR,KAAf"},"metadata":{},"sourceType":"module"}