{"ast":null,"code":"import { arrayEquals } from './Helpers';\nimport { King, Piece } from './Pieces';\nconst BLACK = false;\nconst WHITE = true;\n\nclass ChessGame {\n  constructor() {\n    this.turn = WHITE;\n  }\n\n  isLegalMove(legalMoves, endPos) {\n    // Check that move is legal\n    for (let move of legalMoves) {\n      if (arrayEquals(move, endPos)) {\n        return true;\n      }\n    }\n  }\n\n  SquaresCovered(board, turn) {\n    let squaresCovered = [];\n\n    for (let r = 0; r < 8; r++) {\n      for (let c = 0; c < 8; c++) {\n        if (board[r][c] instanceof Piece) {\n          const piece = board[r][c];\n\n          if (turn === piece.type) {\n            piece.legalMoves(board, [r, c], piece).forEach(m => squaresCovered.push(m));\n          }\n        }\n      }\n    }\n\n    return squaresCovered;\n  }\n\n  move(board, startPos, endPos, piece, kingPos) {\n    // If legal move\n    const [a, b] = startPos;\n    const [x, y] = endPos;\n    let inCheck = false;\n    const kIdx = piece.type ? 0 : 1;\n    const kOppIdx = kIdx ? 0 : 1;\n    const legalMoves = piece.allowedMoves(board, startPos, piece, kingPos[kIdx]);\n\n    if (this.isLegalMove(legalMoves, endPos)) {\n      if (piece instanceof King) {\n        kingPos = endPos;\n      }\n\n      board[a][b] = \"-\";\n      board[x][y] = piece;\n      const squaresCovered = this.squaresCovered(board, piece.type);\n\n      for (let sqr of squaresCovered) {\n        if (arrayEquals(sqr, kingPos[kOppIdx])) {\n          inCheck = true;\n        }\n      }\n\n      return [board, kingPos, inCheck];\n    }\n\n    return [false, kingPos, inCheck];\n  }\n\n}\n\nexport default ChessGame;","map":{"version":3,"names":["arrayEquals","King","Piece","BLACK","WHITE","ChessGame","constructor","turn","isLegalMove","legalMoves","endPos","move","SquaresCovered","board","squaresCovered","r","c","piece","type","forEach","m","push","startPos","kingPos","a","b","x","y","inCheck","kIdx","kOppIdx","allowedMoves","sqr"],"sources":["/Users/benjamincritoph/Programming/React/chess/src/ChessGame.js"],"sourcesContent":["import { arrayEquals } from './Helpers';\nimport { King, Piece } from './Pieces';\n\nconst BLACK = false;\nconst WHITE = true;\n\nclass ChessGame {\n  constructor(){\n    this.turn = WHITE;\n  }\n  isLegalMove(legalMoves, endPos){\n    // Check that move is legal\n    for(let move of legalMoves){\n      if(arrayEquals(move, endPos)){\n        return true;\n      }\n    }\n  }\n  SquaresCovered(board, turn) {\n    let squaresCovered = [];\n    for (let r = 0; r < 8; r++) {\n      for (let c = 0; c < 8; c++) {\n        if (board[r][c] instanceof Piece) {\n          const piece = board[r][c];\n          if (turn === piece.type) {\n            piece.legalMoves(board, [r, c], piece).forEach(m => squaresCovered.push(m));\n          }\n        }\n      }\n    }\n    return squaresCovered;\n  }\n  move(board, startPos, endPos, piece, kingPos) {\n    // If legal move\n    const [a, b] = startPos;\n    const [x, y] = endPos;\n    let inCheck = false;\n    const kIdx = piece.type? 0 : 1;\n    const kOppIdx = kIdx? 0: 1;\n    const legalMoves = piece.allowedMoves(board, startPos, piece, kingPos[kIdx]);\n    if (this.isLegalMove(legalMoves, endPos)) {\n      if (piece instanceof King) {\n        kingPos = endPos;\n      }\n      board[a][b] = \"-\";\n      board[x][y] = piece;\n      const squaresCovered = this.squaresCovered(board, piece.type);\n      for (let sqr of squaresCovered) {\n        if (arrayEquals(sqr, kingPos[kOppIdx])) {\n          inCheck = true;\n        }\n      }\n      return [board, kingPos, inCheck];\n    }\n    return [false, kingPos, inCheck];\n  }\n}\n\nexport default ChessGame;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,UAA5B;AAEA,MAAMC,KAAK,GAAG,KAAd;AACA,MAAMC,KAAK,GAAG,IAAd;;AAEA,MAAMC,SAAN,CAAgB;EACdC,WAAW,GAAE;IACX,KAAKC,IAAL,GAAYH,KAAZ;EACD;;EACDI,WAAW,CAACC,UAAD,EAAaC,MAAb,EAAoB;IAC7B;IACA,KAAI,IAAIC,IAAR,IAAgBF,UAAhB,EAA2B;MACzB,IAAGT,WAAW,CAACW,IAAD,EAAOD,MAAP,CAAd,EAA6B;QAC3B,OAAO,IAAP;MACD;IACF;EACF;;EACDE,cAAc,CAACC,KAAD,EAAQN,IAAR,EAAc;IAC1B,IAAIO,cAAc,GAAG,EAArB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1B,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;QAC1B,IAAIH,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,aAAuBd,KAA3B,EAAkC;UAChC,MAAMe,KAAK,GAAGJ,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,CAAd;;UACA,IAAIT,IAAI,KAAKU,KAAK,CAACC,IAAnB,EAAyB;YACvBD,KAAK,CAACR,UAAN,CAAiBI,KAAjB,EAAwB,CAACE,CAAD,EAAIC,CAAJ,CAAxB,EAAgCC,KAAhC,EAAuCE,OAAvC,CAA+CC,CAAC,IAAIN,cAAc,CAACO,IAAf,CAAoBD,CAApB,CAApD;UACD;QACF;MACF;IACF;;IACD,OAAON,cAAP;EACD;;EACDH,IAAI,CAACE,KAAD,EAAQS,QAAR,EAAkBZ,MAAlB,EAA0BO,KAA1B,EAAiCM,OAAjC,EAA0C;IAC5C;IACA,MAAM,CAACC,CAAD,EAAIC,CAAJ,IAASH,QAAf;IACA,MAAM,CAACI,CAAD,EAAIC,CAAJ,IAASjB,MAAf;IACA,IAAIkB,OAAO,GAAG,KAAd;IACA,MAAMC,IAAI,GAAGZ,KAAK,CAACC,IAAN,GAAY,CAAZ,GAAgB,CAA7B;IACA,MAAMY,OAAO,GAAGD,IAAI,GAAE,CAAF,GAAK,CAAzB;IACA,MAAMpB,UAAU,GAAGQ,KAAK,CAACc,YAAN,CAAmBlB,KAAnB,EAA0BS,QAA1B,EAAoCL,KAApC,EAA2CM,OAAO,CAACM,IAAD,CAAlD,CAAnB;;IACA,IAAI,KAAKrB,WAAL,CAAiBC,UAAjB,EAA6BC,MAA7B,CAAJ,EAA0C;MACxC,IAAIO,KAAK,YAAYhB,IAArB,EAA2B;QACzBsB,OAAO,GAAGb,MAAV;MACD;;MACDG,KAAK,CAACW,CAAD,CAAL,CAASC,CAAT,IAAc,GAAd;MACAZ,KAAK,CAACa,CAAD,CAAL,CAASC,CAAT,IAAcV,KAAd;MACA,MAAMH,cAAc,GAAG,KAAKA,cAAL,CAAoBD,KAApB,EAA2BI,KAAK,CAACC,IAAjC,CAAvB;;MACA,KAAK,IAAIc,GAAT,IAAgBlB,cAAhB,EAAgC;QAC9B,IAAId,WAAW,CAACgC,GAAD,EAAMT,OAAO,CAACO,OAAD,CAAb,CAAf,EAAwC;UACtCF,OAAO,GAAG,IAAV;QACD;MACF;;MACD,OAAO,CAACf,KAAD,EAAQU,OAAR,EAAiBK,OAAjB,CAAP;IACD;;IACD,OAAO,CAAC,KAAD,EAAQL,OAAR,EAAiBK,OAAjB,CAAP;EACD;;AAjDa;;AAoDhB,eAAevB,SAAf"},"metadata":{},"sourceType":"module"}