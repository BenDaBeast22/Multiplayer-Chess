{"ast":null,"code":"// Abstract Class\nclass Piece {\n  constructor(type, img, pos) {\n    if (this.constructor === Piece) {\n      throw new Error('Class \"Piece\" cannot be instantiated');\n    }\n\n    this.type = type;\n    this.imgName = img;\n    this.pos = pos;\n  }\n\n  sayHello() {\n    console.log('hello');\n  }\n\n}\n\nclass Pawn extends Piece {\n  constructor(type, img) {\n    super(type, img);\n  }\n\n}\n\nclass Bishop extends Piece {\n  constructor(type, img) {\n    super(type, img);\n  }\n\n}\n\nclass Knight extends Piece {\n  constructor(type, img) {\n    super(type, img);\n  }\n\n  onBoard(r, c) {\n    if (r > 6 || r < 0 || c > 6 || c < 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  sameColor(colorA, colorB) {\n    if (colorA === colorB) return true;\n  }\n\n  LegalMoves(board, knightPos, knight) {\n    let legal = [];\n    const [rStart, cStart] = knightPos;\n    const moves = [[1, 2], [-1, 2], [1, -2], [-1, -2], [2, 1], [-2, 1], [2, -1], [-2, -1]];\n\n    for (let move in moves) {\n      const [rOff, cOff] = move;\n      let r = rStart + rOff;\n      let c = cStart + cOff;\n\n      if (this.onBoard(r, c) && this.sameColor(board[r][c].type, knight.type)) {\n        legal.push([r, c]);\n      }\n    }\n  }\n\n}\n\nclass Rook extends Piece {\n  constructor(type, img) {\n    super(type, img);\n  }\n\n}\n\nclass Queen extends Piece {\n  constructor(type, img) {\n    super(type, img);\n  }\n\n}\n\nclass King extends Piece {\n  constructor(type, img) {\n    super(type, img);\n  }\n\n}\n\nexport { Piece, Pawn, Bishop, Knight, Rook, Queen, King };","map":{"version":3,"names":["Piece","constructor","type","img","pos","Error","imgName","sayHello","console","log","Pawn","Bishop","Knight","onBoard","r","c","sameColor","colorA","colorB","LegalMoves","board","knightPos","knight","legal","rStart","cStart","moves","move","rOff","cOff","push","Rook","Queen","King"],"sources":["/Users/benjamincritoph/Programming/React/chess/src/Pieces.js"],"sourcesContent":["// Abstract Class\nclass Piece {\n  constructor(type, img, pos){\n    if(this.constructor === Piece){\n      throw new Error('Class \"Piece\" cannot be instantiated');\n    }\n    this.type = type;\n    this.imgName = img;\n    this.pos = pos;\n  }\n\n  sayHello() {\n    console.log('hello');\n  }\n}\n\nclass Pawn extends Piece {\n  constructor(type, img){\n    super(type, img);\n  }\n}\n\nclass Bishop extends Piece {\n  constructor(type, img){\n    super(type, img);\n  }\n}\n\nclass Knight extends Piece {\n  constructor(type, img){\n    super(type, img);\n  }\n  onBoard(r, c){\n    if(r > 6 || r < 0 || c > 6 || c < 0){\n      return false;\n    }\n    return true;\n  }\n  sameColor(colorA, colorB){\n    if(colorA === colorB) return true;\n  }\n  LegalMoves(board, knightPos, knight) {\n    let legal = [];\n    const [rStart, cStart] = knightPos;\n    const moves = [[1,2], [-1,2], [1,-2], [-1,-2], [2,1], [-2,1],[2,-1], [-2,-1]]\n    for(let move in moves){\n      const [rOff, cOff] = move;\n      let r = rStart + rOff;\n      let c = cStart + cOff;\n      if(this.onBoard(r, c) && this.sameColor(board[r][c].type, knight.type)){\n        legal.push([r, c]);\n      }\n\n\n\n      \n      \n    }\n\n    \n    \n    \n  }\n}\n\nclass Rook extends Piece {\n  constructor(type, img){\n    super(type, img);\n  }\n}\n\nclass Queen extends Piece {\n  constructor(type, img){\n    super(type, img);\n  }\n}\n\nclass King extends Piece {\n  constructor(type, img){\n    super(type, img);\n  }\n}\n\n\nexport {Piece, Pawn, Bishop, Knight, Rook, Queen, King};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}