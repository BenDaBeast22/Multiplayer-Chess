{"ast":null,"code":"var _jsxFileName = \"/Users/benjamincritoph/Programming/React/chess/src/Board.js\";\nimport './Board.css';\nimport React from 'react';\nimport Square from './Square';\nimport { Piece, Pawn, Bishop, Knight, Rook, Queen, King } from './Pieces';\nimport { arrayEquals } from './Helpers';\nimport ChessGame from './ChessGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BLACK = false;\nconst WHITE = true;\nlet Game = new ChessGame();\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: this.setupBoard(),\n      selectedPiece: false,\n      turn: WHITE,\n      legalMoves: [],\n      kingPos: [[0, 4], [7, 4]],\n      inCheck: false,\n      checkmate: false,\n      winner: false\n    };\n    this.resetBoard = this.resetBoard.bind(this);\n  }\n\n  selectPiece(pos) {\n    const [r, c] = pos;\n\n    if (this.state.selectedPiece) {\n      if (arrayEquals(pos, this.state.selectedPiece)) {\n        this.setState({\n          selectedPiece: false,\n          legalMoves: []\n        });\n        return;\n      }\n\n      const [or, oc] = this.state.selectedPiece;\n      const pieceFrom = this.state.board[or][oc];\n      const [newBoard, kingPos, inCheck, checkmate] = Game.move(this.state.board, this.state.selectedPiece, pos, pieceFrom, this.state.kingPos, this.state.inCheck);\n\n      if (checkmate) {\n        this.setState({\n          winner: pieceFrom.type,\n          checkmate: true\n        });\n        return;\n      }\n\n      if (newBoard) {\n        this.setState({\n          board: newBoard,\n          selectedPiece: false,\n          turn: !this.state.turn,\n          legalMoves: [],\n          kingPos: kingPos,\n          inCheck: inCheck,\n          checkmate: checkmate\n        });\n      }\n\n      return;\n    }\n\n    const selectedPiece = this.state.board[r][c];\n    const kIdx = selectedPiece.type ? 0 : 1;\n    this.state.legalMoves = selectedPiece.allowedMoves(this.state.board, pos, selectedPiece, this.state.kingPos[kIdx]);\n\n    if (selectedPiece instanceof Piece && selectedPiece.type === this.state.turn) {\n      this.setState({\n        selectedPiece: pos\n      });\n    }\n  }\n\n  setupBoard() {\n    let board = [];\n    const {\n      nRows,\n      nCols\n    } = this.props; // Generate Empty Board\n\n    for (let r = nRows - 1; r >= 0; r--) {\n      let row = [];\n\n      for (let c = 0; c < nCols; c++) {\n        row.push(\"-\");\n      }\n\n      board.push(row);\n    } // Display White Pieces\n\n\n    board[0][0] = new Rook(WHITE, \"w_r\", [0, 0]);\n    board[0][1] = new Knight(WHITE, \"w_kn\", [0, 1]);\n    board[0][2] = new Bishop(WHITE, \"w_b\", [0, 2]);\n    board[0][3] = new Queen(WHITE, \"w_q\", [0, 3]);\n    board[0][4] = new King(WHITE, \"w_k\", [0, 4]);\n    board[0][5] = new Bishop(WHITE, \"w_b\", [0, 5]);\n    board[0][6] = new Knight(WHITE, \"w_kn\", [0, 6]);\n    board[0][7] = new Rook(WHITE, \"w_r\", [0, 7]); // Display Black Pieces\n\n    board[7][0] = new Rook(BLACK, \"b_r\", [7, 0]);\n    board[7][1] = new Knight(BLACK, \"b_kn\", [7, 1]);\n    board[7][2] = new Bishop(BLACK, \"b_b\", [7, 2]);\n    board[7][3] = new Queen(BLACK, \"b_q\", [7, 3]);\n    board[7][4] = new King(BLACK, \"b_k\", [7, 4]);\n    board[7][5] = new Bishop(BLACK, \"b_b\", [7, 5]);\n    board[7][6] = new Knight(BLACK, \"b_kn\", [7, 6]);\n    board[7][7] = new Rook(BLACK, \"b_r\", [7, 7]); // Display Pawns\n\n    for (let c = 0; c < 8; c++) {\n      board[1][c] = new Pawn(WHITE, \"w_p\", [1, c]);\n      board[6][c] = new Pawn(BLACK, \"b_p\", [6, c]);\n    }\n\n    return board;\n  }\n\n  resetBoard() {\n    this.setState({\n      board: this.setupBoard(),\n      selectedPiece: false,\n      turn: WHITE,\n      legalMoves: [],\n      kingPos: [[0, 4], [7, 4]],\n      inCheck: false,\n      checkmate: false\n    });\n    Game = new ChessGame();\n  }\n\n  render() {\n    // Render Chess Board\n    let winMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"W\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 22\n    }, this);\n\n    let board = [];\n    let cOdd = true;\n    let rOdd = true;\n\n    for (let i = this.props.nRows - 1; i >= 0; i--) {\n      let row = [];\n      cOdd = rOdd;\n\n      for (let j = 0; j < this.props.nCols; j++) {\n        const sqr = `${String.fromCharCode(97 + j)}${i}`;\n        const isDark = cOdd ? true : false;\n        const piece = this.state.board[i][j];\n        const pos = [i, j];\n        const isSelected = arrayEquals(pos, this.state.selectedPiece);\n        const isLegalMove = this.state.legalMoves.some(lm => arrayEquals(lm, pos) ? true : false);\n        row.push( /*#__PURE__*/_jsxDEV(Square, {\n          isDark: isDark,\n          piece: piece,\n          selectPiece: () => this.selectPiece([i, j]),\n          isSelected: isSelected,\n          isLegal: isLegalMove\n        }, sqr, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 18\n        }, this));\n        cOdd = !cOdd;\n      }\n\n      board.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 18\n      }, this));\n      rOdd = !rOdd;\n    } // Render Chess Pieces\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"Table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.checkmate ? winMessage : board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetBoard,\n        className: \"Reset\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nBoard.defaultProps = {\n  nRows: 8,\n  nCols: 8\n};\nexport default Board;","map":{"version":3,"names":["React","Square","Piece","Pawn","Bishop","Knight","Rook","Queen","King","arrayEquals","ChessGame","BLACK","WHITE","Game","Board","Component","constructor","props","state","board","setupBoard","selectedPiece","turn","legalMoves","kingPos","inCheck","checkmate","winner","resetBoard","bind","selectPiece","pos","r","c","setState","or","oc","pieceFrom","newBoard","move","type","kIdx","allowedMoves","nRows","nCols","row","push","render","winMessage","cOdd","rOdd","i","j","sqr","String","fromCharCode","isDark","piece","isSelected","isLegalMove","some","lm","defaultProps"],"sources":["/Users/benjamincritoph/Programming/React/chess/src/Board.js"],"sourcesContent":["import './Board.css'\nimport React from 'react'\nimport Square from './Square';\nimport {Piece, Pawn, Bishop, Knight, Rook, Queen, King} from './Pieces';\nimport { arrayEquals } from './Helpers';\nimport ChessGame from './ChessGame';\n\nconst BLACK = false\nconst WHITE = true\n\nlet Game = new ChessGame();\n\nclass Board extends React.Component {\n  static defaultProps = {\n    nRows: 8,\n    nCols: 8,\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: this.setupBoard(),\n      selectedPiece: false,\n      turn: WHITE,\n      legalMoves: [],\n      kingPos: [[0, 4], [7, 4]],\n      inCheck: false,\n      checkmate: false,\n      winner: false\n    }\n    this.resetBoard = this.resetBoard.bind(this);\n  }\n\n  selectPiece(pos) {\n    const [r, c] = pos;\n    if (this.state.selectedPiece) {\n      if (arrayEquals(pos, this.state.selectedPiece)){\n        this.setState({selectedPiece: false, legalMoves: []})\n        return;\n      } \n      const [or, oc] = this.state.selectedPiece;\n      const pieceFrom = this.state.board[or][oc];\n      const [newBoard, kingPos, inCheck, checkmate] = Game.move(this.state.board, this.state.selectedPiece, pos, pieceFrom, this.state.kingPos, this.state.inCheck);\n      if (checkmate) {\n        this.setState({winner: pieceFrom.type, checkmate: true});\n        return;\n      }\n      if (newBoard){\n        this.setState({board: newBoard, selectedPiece: false, turn: !this.state.turn, legalMoves: [], kingPos: kingPos, inCheck: inCheck, checkmate: checkmate});\n      } \n      return;\n    }\n    const selectedPiece = this.state.board[r][c];\n    const kIdx = selectedPiece.type? 0 : 1;\n    this.state.legalMoves = selectedPiece.allowedMoves(this.state.board, pos, selectedPiece, this.state.kingPos[kIdx]);\n    if(selectedPiece instanceof Piece && selectedPiece.type === this.state.turn){\n      this.setState({selectedPiece: pos});\n    }\n  }\n\n  setupBoard() {\n    let board = [];\n    const {nRows, nCols} = this.props;\n    // Generate Empty Board\n    for (let r = nRows - 1; r >= 0; r--) {\n      let row = []\n      for (let c = 0; c < nCols; c++) {\n        row.push(\"-\") \n      }\n      board.push(row)\n    }\n    // Display White Pieces\n    board[0][0] = new Rook(WHITE, \"w_r\", [0, 0]);\n    board[0][1] = new Knight(WHITE, \"w_kn\", [0, 1]);\n    board[0][2] = new Bishop(WHITE, \"w_b\", [0, 2]);\n    board[0][3] = new Queen(WHITE, \"w_q\", [0, 3]);\n    board[0][4] = new King(WHITE, \"w_k\", [0, 4]);\n    board[0][5] = new Bishop(WHITE, \"w_b\", [0, 5]);\n    board[0][6] = new Knight(WHITE, \"w_kn\", [0, 6]);\n    board[0][7] = new Rook(WHITE, \"w_r\", [0, 7]);\n    // Display Black Pieces\n    board[7][0] = new Rook(BLACK, \"b_r\", [7, 0]);\n    board[7][1] = new Knight(BLACK, \"b_kn\", [7, 1]);\n    board[7][2] = new Bishop(BLACK, \"b_b\", [7, 2]);\n    board[7][3] = new Queen(BLACK, \"b_q\", [7, 3]);\n    board[7][4] = new King(BLACK, \"b_k\", [7, 4]);\n    board[7][5] = new Bishop(BLACK, \"b_b\", [7, 5]);\n    board[7][6] = new Knight(BLACK, \"b_kn\", [7, 6]);\n    board[7][7] = new Rook(BLACK, \"b_r\", [7, 7]);\n    // Display Pawns\n    for(let c = 0; c < 8; c++){\n      board[1][c] = new Pawn(WHITE, \"w_p\", [1, c]);\n      board[6][c] = new Pawn(BLACK, \"b_p\", [6, c]);\n    }\n    return board;\n  }\n\n  resetBoard(){\n    this.setState({board: this.setupBoard(), selectedPiece: false, turn: WHITE, legalMoves: [], kingPos: [[0, 4], [7, 4]], inCheck: false, checkmate: false})\n    Game = new ChessGame();\n  }\n  render(){\n    // Render Chess Board\n    let winMessage = <div>W</div>\n    let board = [];\n    let cOdd = true;\n    let rOdd = true;\n    for(let i = this.props.nRows - 1; i >= 0; i--){\n      let row = [] \n      cOdd = rOdd\n      for(let j = 0; j < this.props.nCols; j++){\n        const sqr = `${String.fromCharCode(97 + j)}${i}`\n        const isDark = cOdd? true: false;\n        const piece = this.state.board[i][j];\n        const pos = [i, j];\n        const isSelected = arrayEquals(pos, this.state.selectedPiece);\n        const isLegalMove = this.state.legalMoves.some(lm => arrayEquals(lm, pos)? true : false);\n        row.push(<Square key={sqr} isDark={isDark} piece={piece} selectPiece={() => this.selectPiece([i,j])} isSelected={isSelected} isLegal={isLegalMove}/>)\n        cOdd = !cOdd;\n      }\n      board.push(<tr key={i}>{row}</tr>)   \n      rOdd = !rOdd;  \n    }\n    // Render Chess Pieces\n    return (\n      <div className=\"Board\">\n        <table className=\"Table\">\n          <tbody>\n            {this.state.checkmate? winMessage : board}\n          </tbody>\n        </table>\n        <button onClick={this.resetBoard}className=\"Reset\">Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}